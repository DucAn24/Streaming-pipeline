services:
  kafka:
    image: confluentinc/cp-kafka:7.8.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LOG_RETENTION_MS: 604800000      # 7 ng√†y
      KAFKA_LOG_RETENTION_BYTES: -1     
      KAFKA_LOG_MESSAGE_TIMESTAMP_TYPE : LogAppendTime     
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://0.0.0.0:9092,CONTROLLER://kafka:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:29093
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9101
    networks:
      - flink-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8082:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - flink-network

  mongodb:
    image: mongo:7.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongodb_data:/data/db
      - ./mongo-conf/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks:
      - flink-network

  minio:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - flink-network

  # PostgreSQL for Hive Metastore
  postgres:
    image: postgres:16
    container_name: postgres-hive
    environment:
      POSTGRES_DB: hive_metastore
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - flink-network

  # Hive Metastore Service
  hive-metastore:
    build:
      context: .
      dockerfile: hive-conf/Dockerfile.hive
    container_name: hive-metastore
    depends_on:
      - postgres
    environment:
      SERVICE_NAME: metastore
      DB_DRIVER: postgres
      SERVICE_OPTS: "-Djavax.jdo.option.ConnectionDriverName=org.postgresql.Driver -Djavax.jdo.option.ConnectionURL=jdbc:postgresql://postgres:5432/hive_metastore -Djavax.jdo.option.ConnectionUserName=hive -Djavax.jdo.option.ConnectionPassword=hive123"
      AWS_ACCESS_KEY_ID: minioadmin
      AWS_SECRET_ACCESS_KEY: minioadmin
      S3_ENDPOINT_URL: http://minio:9000
      S3_PATH_STYLE_ACCESS: "true"
    ports:
      - "9083:9083"
    volumes:
      - ./hive-conf/hive-site.xml:/opt/hive/conf/hive-site.xml
    networks:
      - flink-network

  jobmanager:
    build:
      context: .
      dockerfile: flink-conf/flink.Dockerfile
    container_name: jobmanager
    depends_on:
      hive-metastore:
        condition: service_started
      minio:
        condition: service_started
    ports:
      - "8081:8081"
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 20
        parallelism.default: 2
    volumes:
      - ./src/:/opt/flink/src
      - ./api-source/:/opt/flink/api-source
    networks:
      - flink-network

  taskmanager:
    build:
      context: .
      dockerfile: flink-conf/flink.Dockerfile
    container_name: taskmanager
    depends_on:
      jobmanager:
        condition: service_started
      hive-metastore:
        condition: service_started
      minio:
        condition: service_started
    command: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 20 
        parallelism.default: 2
    volumes:
      - ./src/:/opt/flink/src
      - ./api-source/:/opt/flink/api-source
    networks:
      - flink-network

  elasticsearch:
    container_name: es-container
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - flink-network
    ports:
      - 9200:9200
      
  kibana:
    container_name: kb-container
    image: docker.elastic.co/kibana/kibana:7.6.0
    environment:
      - ELASTICSEARCH_HOSTS=http://es-container:9200
    networks:
      - flink-network
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601

  trino:
    build:
      context: .
      dockerfile: trino/Dockerfile.trino
    container_name: trino
    ports:
      - "8083:8080"
    environment:
      - CATALOG_MANAGEMENT=dynamic
    volumes:
      - ./trino/catalog:/etc/trino/catalog
      - trino_data:/tmp/trino
    networks:
      - flink-network

volumes:
  mongodb_data:
  minio_data:
  postgres_data:
  warehouse_data:
  trino_data:

networks:
  flink-network:
    driver: bridge
    name: flink-network